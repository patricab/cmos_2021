/* Generated by Yosys 0.9 (git sha1 1979e0b1, gcc 10.3.0-1ubuntu1~20.10 -fPIC -Os) */

(* top =  1  *)
(* src = "pixelState.v:1" *)
module pixelState(clk, state_reset, read_reg, expose_finished, ADC_finished, read, expose_enable, convert, frame_reset, ADC_reset);
  (* src = "pixelState.v:28" *)
  wire _000_;
  (* src = "pixelState.v:28" *)
  wire _001_;
  (* src = "pixelState.v:28" *)
  wire _002_;
  (* src = "pixelState.v:79" *)
  wire [2:0] _003_;
  (* src = "pixelState.v:28" *)
  wire _004_;
  (* src = "pixelState.v:79" *)
  wire [2:0] _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  (* src = "pixelState.v:28" *)
  wire _048_;
  (* src = "pixelState.v:28" *)
  wire _049_;
  (* src = "pixelState.v:28" *)
  wire _050_;
  (* src = "pixelState.v:79" *)
  wire _051_;
  (* src = "pixelState.v:79" *)
  wire _052_;
  (* src = "pixelState.v:79" *)
  wire _053_;
  (* src = "pixelState.v:28" *)
  wire _054_;
  (* src = "pixelState.v:79" *)
  wire _055_;
  (* src = "pixelState.v:79" *)
  wire _056_;
  (* src = "pixelState.v:79" *)
  wire _057_;
  (* src = "pixelState.v:6" *)
  wire _058_;
  (* src = "pixelState.v:12" *)
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  (* src = "pixelState.v:2" *)
  wire _070_;
  (* src = "pixelState.v:9" *)
  wire _071_;
  (* src = "pixelState.v:11" *)
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  (* src = "pixelState.v:20" *)
  wire _130_;
  (* src = "pixelState.v:20" *)
  wire _131_;
  (* src = "pixelState.v:20" *)
  wire _132_;
  (* src = "pixelState.v:8" *)
  wire _133_;
  (* src = "pixelState.v:20" *)
  wire _134_;
  (* src = "pixelState.v:20" *)
  wire _135_;
  (* src = "pixelState.v:20" *)
  wire _136_;
  (* src = "pixelState.v:3" *)
  wire _137_;
  wire _138_;
  wire _139_;
  wire _140_;
  wire _141_;
  wire _142_;
  wire _143_;
  wire _144_;
  wire _145_;
  wire _146_;
  wire _147_;
  wire _148_;
  wire _149_;
  wire _150_;
  wire _151_;
  wire _152_;
  wire _153_;
  wire _154_;
  wire _155_;
  wire _156_;
  wire _157_;
  (* src = "pixelState.v:6" *)
  input ADC_finished;
  (* src = "pixelState.v:12" *)
  output ADC_reset;
  (* src = "pixelState.v:2" *)
  input clk;
  (* src = "pixelState.v:10" *)
  output convert;
  (* src = "pixelState.v:19" *)
  wire [5:0] exposeCycles_pixel;
  (* src = "pixelState.v:9" *)
  output expose_enable;
  (* src = "pixelState.v:5" *)
  input expose_finished;
  (* src = "pixelState.v:11" *)
  output frame_reset;
  (* src = "pixelState.v:20" *)
  wire [2:0] next_state;
  (* src = "pixelState.v:8" *)
  output read;
  (* src = "pixelState.v:18" *)
  wire read_finished;
  (* src = "pixelState.v:4" *)
  input [3:0] read_reg;
  (* src = "pixelState.v:20" *)
  wire [2:0] state;
  (* src = "pixelState.v:3" *)
  input state_reset;
  IVX1_CV _158_ (
    .A(_070_),
    .Y(_069_)
  );
  IVX1_CV _159_ (
    .A(_136_),
    .Y(_074_)
  );
  IVX1_CV _160_ (
    .A(_062_),
    .Y(_075_)
  );
  NRX1_CV _161_ (
    .A(_134_),
    .B(_135_),
    .Y(_076_)
  );
  ORX1_CV _162_ (
    .A(_134_),
    .B(_135_),
    .Y(_077_)
  );
  NDX1_CV _163_ (
    .A(_074_),
    .B(_135_),
    .Y(_078_)
  );
  ANX1_CV _164_ (
    .A(_077_),
    .B(_078_),
    .Y(_079_)
  );
  NDX1_CV _165_ (
    .A(_077_),
    .B(_078_),
    .Y(_080_)
  );
  ORX1_CV _166_ (
    .A(_060_),
    .B(_080_),
    .Y(_081_)
  );
  ANX1_CV _167_ (
    .A(_136_),
    .B(_130_),
    .Y(_082_)
  );
  NDX1_CV _168_ (
    .A(_076_),
    .B(_082_),
    .Y(_083_)
  );
  ANX1_CV _169_ (
    .A(_081_),
    .B(_083_),
    .Y(_084_)
  );
  NRX1_CV _170_ (
    .A(_137_),
    .B(_084_),
    .Y(_055_)
  );
  NRX1_CV _171_ (
    .A(_134_),
    .B(_058_),
    .Y(_085_)
  );
  ANX1_CV _172_ (
    .A(_135_),
    .B(_062_),
    .Y(_086_)
  );
  ANX1_CV _173_ (
    .A(_085_),
    .B(_086_),
    .Y(_087_)
  );
  NDX1_CV _174_ (
    .A(_080_),
    .B(_087_),
    .Y(_088_)
  );
  ANX1_CV _175_ (
    .A(_136_),
    .B(_131_),
    .Y(_089_)
  );
  NDX1_CV _176_ (
    .A(_076_),
    .B(_089_),
    .Y(_090_)
  );
  ORX1_CV _177_ (
    .A(_061_),
    .B(_080_),
    .Y(_091_)
  );
  ANX1_CV _178_ (
    .A(_090_),
    .B(_091_),
    .Y(_092_)
  );
  ANX1_CV _179_ (
    .A(_088_),
    .B(_092_),
    .Y(_093_)
  );
  NRX1_CV _180_ (
    .A(_137_),
    .B(_093_),
    .Y(_056_)
  );
  ORX1_CV _181_ (
    .A(_134_),
    .B(_078_),
    .Y(_094_)
  );
  NDX1_CV _182_ (
    .A(_134_),
    .B(_086_),
    .Y(_095_)
  );
  NDX1_CV _183_ (
    .A(_094_),
    .B(_095_),
    .Y(_096_)
  );
  NRX1_CV _184_ (
    .A(_079_),
    .B(_085_),
    .Y(_097_)
  );
  ANX1_CV _185_ (
    .A(_096_),
    .B(_097_),
    .Y(_098_)
  );
  NDX1_CV _186_ (
    .A(_075_),
    .B(_065_),
    .Y(_099_)
  );
  ANX1_CV _187_ (
    .A(_136_),
    .B(_077_),
    .Y(_100_)
  );
  NRX1_CV _188_ (
    .A(_137_),
    .B(_100_),
    .Y(_101_)
  );
  NDX1_CV _189_ (
    .A(_076_),
    .B(_099_),
    .Y(_102_)
  );
  NDX1_CV _190_ (
    .A(_101_),
    .B(_102_),
    .Y(_103_)
  );
  ORX1_CV _191_ (
    .A(_098_),
    .B(_103_),
    .Y(_057_)
  );
  NDX1_CV _192_ (
    .A(_130_),
    .B(_087_),
    .Y(_104_)
  );
  ORX1_CV _193_ (
    .A(_135_),
    .B(_060_),
    .Y(_105_)
  );
  NDX1_CV _194_ (
    .A(_062_),
    .B(_105_),
    .Y(_106_)
  );
  ANX1_CV _195_ (
    .A(_062_),
    .B(_105_),
    .Y(_107_)
  );
  ANX1_CV _196_ (
    .A(_077_),
    .B(_107_),
    .Y(_108_)
  );
  NDX1_CV _197_ (
    .A(_104_),
    .B(_108_),
    .Y(_109_)
  );
  ANX1_CV _198_ (
    .A(_063_),
    .B(_106_),
    .Y(_110_)
  );
  NRX1_CV _199_ (
    .A(_137_),
    .B(_110_),
    .Y(_111_)
  );
  ANX1_CV _200_ (
    .A(_109_),
    .B(_111_),
    .Y(_051_)
  );
  NDX1_CV _201_ (
    .A(_131_),
    .B(_087_),
    .Y(_112_)
  );
  ANX1_CV _202_ (
    .A(_095_),
    .B(_107_),
    .Y(_113_)
  );
  NDX1_CV _203_ (
    .A(_112_),
    .B(_113_),
    .Y(_114_)
  );
  ANX1_CV _204_ (
    .A(_064_),
    .B(_106_),
    .Y(_115_)
  );
  NRX1_CV _205_ (
    .A(_137_),
    .B(_115_),
    .Y(_116_)
  );
  ANX1_CV _206_ (
    .A(_114_),
    .B(_116_),
    .Y(_052_)
  );
  NDX1_CV _207_ (
    .A(_132_),
    .B(_085_),
    .Y(_117_)
  );
  ORX1_CV _208_ (
    .A(_078_),
    .B(_117_),
    .Y(_118_)
  );
  NDX1_CV _209_ (
    .A(_107_),
    .B(_118_),
    .Y(_119_)
  );
  ANX1_CV _210_ (
    .A(_065_),
    .B(_106_),
    .Y(_120_)
  );
  NRX1_CV _211_ (
    .A(_137_),
    .B(_120_),
    .Y(_121_)
  );
  ANX1_CV _212_ (
    .A(_119_),
    .B(_121_),
    .Y(_053_)
  );
  NDX1_CV _213_ (
    .A(_060_),
    .B(_061_),
    .Y(_122_)
  );
  ANX1_CV _214_ (
    .A(_075_),
    .B(_122_),
    .Y(_123_)
  );
  NDX1_CV _215_ (
    .A(_059_),
    .B(_123_),
    .Y(_124_)
  );
  NDX1_CV _216_ (
    .A(_095_),
    .B(_124_),
    .Y(_048_)
  );
  NDX1_CV _217_ (
    .A(_134_),
    .B(_062_),
    .Y(_125_)
  );
  ORX1_CV _218_ (
    .A(_135_),
    .B(_125_),
    .Y(_126_)
  );
  NDX1_CV _219_ (
    .A(_133_),
    .B(_079_),
    .Y(_127_)
  );
  NDX1_CV _220_ (
    .A(_126_),
    .B(_127_),
    .Y(_054_)
  );
  NDX1_CV _221_ (
    .A(_062_),
    .B(_076_),
    .Y(_128_)
  );
  NDX1_CV _222_ (
    .A(_072_),
    .B(_123_),
    .Y(_129_)
  );
  NDX1_CV _223_ (
    .A(_128_),
    .B(_129_),
    .Y(_050_)
  );
  NDX1_CV _224_ (
    .A(_071_),
    .B(_079_),
    .Y(_073_)
  );
  NDX1_CV _225_ (
    .A(_126_),
    .B(_073_),
    .Y(_049_)
  );
  IVX1_CV _226_ (
    .A(_070_),
    .Y(_066_)
  );
  IVX1_CV _227_ (
    .A(_070_),
    .Y(_067_)
  );
  IVX1_CV _228_ (
    .A(_070_),
    .Y(_068_)
  );
  (* src = "pixelState.v:79" *)
  DFSRQNX1_CV _229_ (
    .CK(clk),
    .D(_005_[0]),
    .Q(state[0]),
    .QN(_138_),
    .R(1'h0),
    .S(1'h0)
  );
  (* src = "pixelState.v:79" *)
  DFSRQNX1_CV _230_ (
    .CK(clk),
    .D(_005_[1]),
    .Q(state[1]),
    .QN(_139_),
    .R(1'h0),
    .S(1'h0)
  );
  (* src = "pixelState.v:79" *)
  DFSRQNX1_CV _231_ (
    .CK(clk),
    .D(_005_[2]),
    .Q(state[2]),
    .QN(_140_),
    .R(1'h0),
    .S(1'h0)
  );
  (* src = "pixelState.v:79" *)
  DFSRQNX1_CV _232_ (
    .CK(clk),
    .D(_003_[0]),
    .Q(next_state[0]),
    .QN(_141_),
    .R(1'h0),
    .S(1'h0)
  );
  (* src = "pixelState.v:79" *)
  DFSRQNX1_CV _233_ (
    .CK(clk),
    .D(_003_[1]),
    .Q(next_state[1]),
    .QN(_142_),
    .R(1'h0),
    .S(1'h0)
  );
  (* src = "pixelState.v:79" *)
  DFSRQNX1_CV _234_ (
    .CK(clk),
    .D(_003_[2]),
    .Q(next_state[2]),
    .QN(_143_),
    .R(1'h0),
    .S(1'h0)
  );
  (* src = "pixelState.v:28" *)
  DFSRQNX1_CV _235_ (
    .CK(_154_),
    .D(_001_),
    .Q(expose_enable),
    .QN(_144_),
    .R(1'h0),
    .S(1'h0)
  );
  (* src = "pixelState.v:28" *)
  DFSRQNX1_CV _236_ (
    .CK(_155_),
    .D(_002_),
    .Q(frame_reset),
    .QN(_145_),
    .R(1'h0),
    .S(1'h0)
  );
  (* src = "pixelState.v:28" *)
  DFSRQNX1_CV _237_ (
    .CK(_156_),
    .D(_004_),
    .Q(read),
    .QN(_146_),
    .R(1'h0),
    .S(1'h0)
  );
  (* src = "pixelState.v:28" *)
  DFSRQNX1_CV _238_ (
    .CK(_157_),
    .D(_000_),
    .Q(ADC_reset),
    .QN(_147_),
    .R(1'h0),
    .S(1'h0)
  );
  assign convert = 1'h0;
  assign exposeCycles_pixel = 6'h0a;
  assign read_finished = 1'h0;
  assign _007_ = _138_;
  assign _017_ = _139_;
  assign _011_ = _140_;
  assign _032_ = _141_;
  assign _037_ = _142_;
  assign _025_ = _143_;
  assign _070_ = clk;
  assign _157_ = _069_;
  assign _134_ = state[0];
  assign _136_ = state[2];
  assign _135_ = state[1];
  assign _062_ = _140_;
  assign _058_ = ADC_finished;
  assign _130_ = next_state[0];
  assign _060_ = _138_;
  assign _005_[0] = _055_;
  assign _131_ = next_state[1];
  assign _061_ = _139_;
  assign _005_[1] = _056_;
  assign _132_ = next_state[2];
  assign _065_ = _143_;
  assign _137_ = state_reset;
  assign _005_[2] = _057_;
  assign _063_ = _141_;
  assign _003_[0] = _051_;
  assign _064_ = _142_;
  assign _003_[1] = _052_;
  assign _003_[2] = _053_;
  assign _059_ = ADC_reset;
  assign _000_ = _048_;
  assign _133_ = read;
  assign _004_ = _054_;
  assign _072_ = frame_reset;
  assign _002_ = _050_;
  assign _071_ = expose_enable;
  assign _001_ = _049_;
  assign _154_ = _066_;
  assign _155_ = _067_;
  assign _156_ = _068_;
endmodule
